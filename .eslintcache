[{"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/index.js":"1","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/reportWebVitals.js":"2","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/App.js":"3","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/firebase.js":"4","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/components/messages/Messages.js":"5","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/WelcomeDialogBox.js":"6"},{"size":500,"mtime":1618034520589,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1618034520644,"results":"9","hashOfConfig":"8"},{"size":6524,"mtime":1618127035066,"results":"10","hashOfConfig":"8"},{"size":540,"mtime":1618034520588,"results":"11","hashOfConfig":"8"},{"size":2228,"mtime":1618034520588,"results":"12","hashOfConfig":"8"},{"size":1331,"mtime":1618034520587,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6jo9uq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/index.js",[],"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/reportWebVitals.js",[],"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/App.js",["27","28","29"],"import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport logo from \"./logo.png\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Messages from \"./components/messages/Messages.js\";\nimport WelcomeDialogBox from \"./WelcomeDialogBox\";\nimport db from \"./firebase.js\";\nimport firebase from \"firebase\";\nimport './switcher.css';\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\n\n\nfunction App() {\n  const [loading,setLoading]=useState(false)\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [openWelcomeDialogBox, setOpenWelcomeDialogBox] = useState(false);\n  const [dark, setDark] = useState(false);\n  const[colorTheme,setColorTheme]=useState('theme-white');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    setOpenWelcomeDialogBox(true);\n  }, []);\n\n  useEffect(() => {\n    setLoading(true)\n    console.log(\"setting true\",loading)\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) =>{\n        setMessages(snapshot.docs.map((doc) => doc.data()));\n        setLoading(false)\n      });\n  }, []);\n  useEffect(()=>{\n    const currentThemeColor=localStorage.getItem('theme-color');\n    if(currentThemeColor){\n      setColorTheme(currentThemeColor);\n    }\n    \n      },[]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"auto\" });\n  };\n\n  const newMessage = (event) => {\n    event.preventDefault();\n    //setMessages([...messages,{message:input,username:username}]);\n    if (input.trim() !== \"\") {\n      db.collection(\"messages\").add({\n        username: username,\n        message: input,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n    setInput(\"\");\n  };\n\n  const handleKeyPress = (event) => {\n    //it triggers by pressing the enter key\n    if (event.key === 'Enter') {\n      newMessage(event);\n    }\n  };\n\n  const theme = (event) => {\n    if (dark === false) {\n      document.body.classList.add(\"dark-bg\");\n      setDark(true);\n    } else {\n      document.body.classList.remove(\"dark-bg\");\n      setDark(false);\n    }\n  };\n  let check=true;\n  const colorstheme=()=>{\nif(document.getElementById(\"theme-options\")&& check==true)\n    {check=false;\n      document.getElementById(\"theme-options\").style.visibility = \"visible\";\n  }\n  else if(document.getElementById(\"theme-options\")&& check==false)\n{\n  check=true;\n      document.getElementById(\"theme-options\").style.visibility = \"hidden\";\n}\n};\n\nconst handleClick=(themec)=>{\n  setColorTheme(themec);\n  localStorage.setItem('theme-color',themec)\n    };\n  return (\n    <div className={`App ${colorTheme}`}>\n      <nav className={`NavBar ${dark ? \"BlackNavBar\" : \"\"}`}>\n        <div className=\"flex1\">\n          <img\n            className=\"Logo\"\n            aspect-ratio=\"1/1\"\n            height=\"auto\"\n            width=\"82px\"\n            src={logo}\n            alt=\"messenger-logo\"\n          />\n          <h1 className={`messenger ${dark ? \"blackName\" : \"\"}`}>Messenger</h1>\n        </div>\n        <div id='theme-options'>\n        \n          <Button id=\"blackbtn\" title=\"toggle Dark Mode\"  className=\"dark\" onClick={theme} ><Brightness4Icon /></Button>\n          \n          <table>\n\n         <tr>\n           \n            <th>\n       <div id='theme-pink' title=\"dark pink\"\n       onClick={()=>handleClick('theme-pink')}\n       /></th>\n        <th><div id='theme-white' title=\"original\"\n       onClick={()=>handleClick('theme-white')}\n       /></th>\n      <th>\n       <div id='theme-orange' title=\"orange\"\n        onClick={()=>handleClick('theme-orange')}/>\n</th>\n    <th>\n       <div id='theme-purple' title=\"purple\"\n       onClick={()=>handleClick('theme-purple')}\n       />\n</th>\n<th>\n       <div id='theme-green' title=\"green\"\n       onClick={()=>handleClick('theme-green')}/>\n</th>\n</tr>\n\n\n\n\n</table>\n\n     </div>\n     <Button id=\"themebtn\" title=\"Click for various theme color\"className=\"btntheme\" onClick={colorstheme} ><ArrowLeftRoundedIcon/><br></br>Theme Store</Button>\n      </nav>\n      {\n          loading?<CircularProgress className=\"loading\"/>:\n          <>\n          <div className=\"scroll\">\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            {messages.map((message) => (\n              <Messages\n                messages={message}\n                username={username}\n                dark={dark}\n                key={genKey()}\n              />\n            ))}\n            <div />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n          </div>\n          <div ref={messagesEndRef} />\n          {/* <div className=\"div__footer\"> */}\n            <footer className={`${dark ? \"footer_dark\" : \"\"}`}>\n              <div className=\"content__footer\">\n                <div className=\"sendNewMessage\">\n                  <button className={`addfiles ${dark ? \"darkButton\" : \"\"}`}>\n                    <i className=\"fa fa-plus\"></i>\n                  </button>\n                  <input\n                    className={`input ${dark ? \"dark_input\" : \"light_input\"}`}\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    onChange={(event) => setInput(event.target.value)}\n                    value={input}\n                    onKeyPress={handleKeyPress}\n                  />\n                  <button\n                    className={`btnsend ${dark ? \"darkButtonSend\" : \"\"}`}\n                    id=\"sendMsgBtn\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    onClick={newMessage}\n                  >\n                    <i className=\"fa fa-paper-plane\"></i>\n                  </button>\n                </div>\n              </div>\n            </footer>\n            <WelcomeDialogBox\n              open={openWelcomeDialogBox}\n              close={() => setOpenWelcomeDialogBox(false)}\n              setUsername={setUsername}\n            />\n          {/* </div> */}\n        </>\n      }\n    </div>\n  );\n}\n\n// keys generator:- every new call to this function will give numbs like 0,1,2,3....\nconst genKey = (function () {\n  var keyCode = 0;\n  return function incKey() {\n    return keyCode++;\n  };\n})();\n\nexport default App;\n","/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/firebase.js",[],"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/components/messages/Messages.js",[],"/Users/sristichowdhury/Desktop/gssoc/React-Messenger-App/src/WelcomeDialogBox.js",[],{"ruleId":"30","severity":1,"message":"31","line":39,"column":6,"nodeType":"32","endLine":39,"endColumn":8,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":87,"column":52,"nodeType":"36","messageId":"37","endLine":87,"endColumn":54},{"ruleId":"34","severity":1,"message":"35","line":91,"column":59,"nodeType":"36","messageId":"37","endLine":91,"endColumn":61},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["38"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"39","fix":"40"},"Update the dependencies array to be: [loading]",{"range":"41","text":"42"},[1315,1317],"[loading]"]